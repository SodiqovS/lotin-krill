export declare type ExceptionalPair = [latin: string, cyrillic: string];
declare type ExceptionalMatcher = {
    matcher: string | RegExp;
    replacement: string;
};
export declare type TransliterationSource = 'cyrillic' | 'latin';
export declare class ExceptionalsCollection {
    private collection;
    constructor(exceptions?: ExceptionalPair[]);
    extend(exceptions: ExceptionalPair[]): void;
    purge(): void;
    private generateWordCasingVariants;
    private getCase;
    private normalizeEndSoftSign;
    private findInCollection;
    private decideMatcher;
    findCase(word: string, source: TransliterationSource): ExceptionalMatcher | undefined;
}
export {};
